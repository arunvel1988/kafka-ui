
version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: arun-zookeeper
    ports:
      - "8349:2181"
    restart: always

  kafka1:
    image: wurstmeister/kafka:2.13-3.6.1
    container_name: arun-broker1
    ports:
      - "4321:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:4321
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - zookeeper
    restart: always

  kafka2:
    image: wurstmeister/kafka:2.13-3.6.1
    container_name: arun-broker2
    ports:
      - "8198:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:8198
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - zookeeper
    restart: always

  kafka3:
    image: wurstmeister/kafka:2.13-3.6.1
    container_name: arun-broker3
    ports:
      - "6812:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:6812
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
    depends_on:
      - zookeeper
    restart: always

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: arun-ui
    environment:
      KAFKA_BROKERCONNECT: "kafka1:9092,kafka2:9092,kafka3:9092"
      JVM_OPTS: "-Xms32M -Xmx64M"
    ports:
      - "6851:9000"
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    restart: always
